services:
  app:
      container_name: lanchonete
      restart: always
      build: 
        dockerfile: Dockerfile
      ports:
        - '8080:8080'
      networks:
        - lanchonete-network
      depends_on:
        db:
          condition: service_healthy

  db:
    image: mysql:8.3
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_HOST: "%"
      MYSQL_USER: fiap
      MYSQL_PASSWORD: fiap
      MYSQL_DATABASE: lanchonete

    ports:
      - "3306:3306"
    expose:
      - "3306"

    restart: always
    volumes:
      - db:/var/lib/mysql

    networks:
      - lanchonete-network

    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  rabbitmq:
    image: rabbitmq:3.12-management
    ports:
      # These will be available at your localhost:
      - "5672:5672"
      - "25672:25672" # (erlang) communication between the nodes and CLI tool
      - "15672:15672" # communication with the web management API

    volumes:
      - rabbitmq:/var/lib/rabbitmq/

    environment:
      RABBITMQ_DEFAULT_USER: fiap
      RABBITMQ_DEFAULT_PASS: fiap
    
    networks:
      - lanchonete-network

    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

volumes:
  db:
  rabbitmq:

networks:
  lanchonete-network:
    driver: bridge