# Define a 'Service' To Expose MySQL to Other Services
apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    app: mysql
    tier: database
spec:
  ports:
    - protocol: "TCP"
      port: 3306
      targetPort: 3306
  selector:
    app: mysql
    tier: database
  type: NodePort
  # clusterIP: 10.96.0.10
  # clusterIP: None # DNS is used, so clusterIP is not needed
---
# Define a 'Persistent Volume Claim'(PVC) for MySQL Storage, dynamically provisioned by cluster
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim # name of PVC essential for identifying the storage data
  labels:
    app: mysql
    tier: database
spec:
  accessModes:
    - ReadWriteOnce #This specifies the mode of the claim that we are trying to create.
  resources:
    requests:
      storage: 1Gi #This will tell kubernetes about the amount of space we are trying to claim.
---
# Deployment specification begins here
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
    tier: database
spec:
  selector: # mySQL Pod Should contain same labels
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels: # Must match 'Service' and 'Deployment' selectors
        app: mysql
        tier: database
    spec:
      containers:
        - name: mysql
          image: mysql
          imagePullPolicy: "IfNotPresent"
          envFrom:
            - secretRef:
                name: mysql-secret
          env:
            - name: MYSQL_ROOT_HOST
              value: "%"
            - name: MYSQL_DATABASE
              value: "lanchonete"
          ports:
            - containerPort: 3307
              name: mysql
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-persistance-storage
      volumes:
        - name: mysql-persistance-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
---
apiVersion: batch/v1
kind: Job
metadata:
  name: flyway-migration
  # namespace: my-namespace
spec:
  template:
    spec:
      containers:
        - name: flyway
          image: flyway/flyway:latest
          env:
            - name: FLYWAY_URL
              value: jdbc:mysql://mysql:3306/lanchonete
            - name: FLYWAY_USER
              value: myuser
            - name: FLYWAY_PASSWORD
              value: mypassword
            - name: FLYWAY_LOCATIONS
              value: classpath:db/migration
          command: ["flyway", "migrate"]
      restartPolicy: OnFailure
